plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// 1) plain JAR 생성 비활성화
tasks.named('jar') {
    enabled = false
}

// 2) fat-jar 이름을 항상 app.jar 로 고정
bootJar {
    archiveFileName.set("app.jar")
}

def grpcVersion = '1.64.0'
def protobufVersion = '3.25.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //stmp
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 직렬화/역직렬화


    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.lettuce:lettuce-core'

    // Google ID Token 검증용
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.api-client:google-api-client-gson:2.0.0'

    // JWT 토큰 발급용
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // grpc
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Google ID Token 검증용
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.api-client:google-api-client-gson:2.0.0'

    // JWT 토큰 발급용
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = [
                    'src/main/java',
                    'build/generated/source/proto/main/java',
                    'build/generated/source/proto/main/grpc'
            ]
        }
        proto {
            srcDir 'src/main/proto'
        }
    }
}


tasks.withType(ProcessResources).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

compileJava.dependsOn 'generateProto'


services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: bookglebookgle
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - test-net

  spring:
    build:
      context: ./bookglebookgle-server
      dockerfile: Dockerfile
    container_name: spring-app
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - redis                 # ⭐️ spring이 redis보다 나중에 뜨도록!
    environment:
      DB_USERNAME: root
      DB_PASSWORD: ${DB_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    volumes:
      - ./backend-logs:/logs
      - /home/ubuntu/bookglebookgle-server/uploads:/home/ubuntu/pdf-uploads
      - ./application.yml:/app/config/application.yml
    networks:
      - test-net

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    ports:
      - "3100:3100"
    command: ["-config.file=/etc/loki/local-config.yaml"]
    networks:
      - test-net

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
      - ./backend-logs:/logs
    command: ["-config.file=/etc/promtail/promtail-config.yml"]
    networks:
      - test-net

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - loki
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin1234
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SESSION_PROVIDER=file
      - GF_SESSION_PROVIDER_CONFIG=session.db
    networks:
      - test-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus 
    networks:
      - test-net

  redis:                                    # ⭐️ 추가
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6479:6379"                         # 호스트 6479 → 컨테이너 6379
    volumes:
      - redis-data:/data                    # (선택) 데이터 유지
    networks:
      - test-net                            # 네트워크 연결

volumes:
  grafana-storage:
  redis-data:                               # ⭐️ redis 데이터 유지용 볼륨

networks:
  test-net:
    driver: bridge
